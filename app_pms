import sqlite3
# from flask_sqlalchemy import SQLAlchemy
# import 
from flask import Flask, render_template, request, url_for, flash, redirect
from werkzeug.exceptions import abort

import pymysql

# Connect to the database



def get_db_connection():
    connection = pymysql.connect(host='localhost',
        user='root', 
        password = "SQL@0304#",
        db='db1',)
    # conn.row_factory = pymysql.Row
    return connection.cursor()

def getPost(postId):
    conn = get_db_connection()
    conn.execute('SELECT * FROM posts WHERE postId = %s', (postId,))
    post = conn.fetchone()
    conn.close()
    if post is None:
        abort(404)
    return post

def getComments(postId):
    conn = get_db_connection()
    conn.execute('SELECT * FROM comments WHERE post_id = %s', (postId,))
    comments = conn.fetchall()
    conn.close()
    if comments is None:
        return {}
    return comments

app = Flask(__name__)
app.config['SECRET_KEY'] = 'your secret key'
# blogs = [{'author' : 'Nice', 'title' : 'Blog1', 'text' : "hello"},{'author' : 'Nice', 'title' : 'Blog2', 'text' : "hello"},{'author' : 'Nice', 'title' : 'Blog3', 'text' : "hello"},{'author' : 'Nice', 'title' : 'Blog3', 'text' : "hello"},{'author' : 'Nice', 'title' : 'Blog3', 'text' : "hello"},{'author' : 'Nice', 'title' : 'Blog', 'text' : "hello"},{'author' : 'Nice', 'title' : 'Blog', 'text' : "hello"},{'author' : 'Nice', 'title' : 'Blog', 'text' : "hello"}
# ]
         
@app.route('/')
def home():
    conn = get_db_connection()
    conn.execute('SELECT * FROM posts')
    posts = conn.fetchall()
    print(posts[0][0])
    conn.close()
    return render_template('index.html',posts=posts)

# @app.route('/blogpost')
# def blogpost():  
#     return render_template('blogpost.html')

@app.route('/login')
def login():
    return render_template('login.html')

@app.route('/signup')
def signup():
    return render_template('signup.html')

@app.route('/search')
def search():
    return render_template('search.html')

@app.route('/byauthor')
def byauthor():
    return render_template('byauthor.html')

@app.route('/searchresults')
def searchresults():
    return render_template('searchresults.html')

@app.route('/trending')
def trending():
    return render_template('trending.html')

@app.route('/<int:postId>', methods=('GET', 'POST'))
def viewPost(postId):
    post = getPost(postId)
    if request.method == 'POST':
        content = request.form['content']
        if not content:
            flash('Can\'t put empty comment')
        else:
            conn = get_db_connection()
            conn.execute('INSERT into comments (post_id, content) VALUES (%s, %s)', (postId, content))
            conn.commit()
            conn.close()
            redirect(url_for('home'))
    comments = getComments(postId)
    return render_template('blogpost.html', posts=post, comments=comments)

@app.route('/create', methods=('GET', 'POST'))
def create():
    if request.method == 'POST':
        title = request.form['title']
        content = request.form['content']

        if not title:
            flash('Title is necessary')
        else:
            conn = get_db_connection()
            conn.execute('INSERT INTO posts (topic, content) VALUES (%s, %s)', (title, content))
            conn.commit()
            conn.close()
            
    return render_template('newpost.html')




if __name__ == "__main__":
    app.run(debug=True)
